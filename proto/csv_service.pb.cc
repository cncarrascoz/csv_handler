// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: csv_service.proto
// Protobuf C++ Version: 5.29.3

#include "csv_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace csvservice {
              template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr CsvUploadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        row_count_{0},
        column_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CsvUploadResponse::CsvUploadResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CsvUploadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CsvUploadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CsvUploadResponseDefaultTypeInternal() {}
  union {
    CsvUploadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CsvUploadResponseDefaultTypeInternal _CsvUploadResponse_default_instance_;

inline constexpr CsvUploadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        csv_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CsvUploadRequest::CsvUploadRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CsvUploadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CsvUploadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CsvUploadRequestDefaultTypeInternal() {}
  union {
    CsvUploadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CsvUploadRequestDefaultTypeInternal _CsvUploadRequest_default_instance_;

inline constexpr CsvFileList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filenames_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CsvFileList::CsvFileList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CsvFileListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CsvFileListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CsvFileListDefaultTypeInternal() {}
  union {
    CsvFileList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CsvFileListDefaultTypeInternal _CsvFileList_default_instance_;
}  // namespace csvservice
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_csv_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_csv_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_csv_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadRequest, _impl_.filename_),
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadRequest, _impl_.csv_data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadResponse, _impl_.row_count_),
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvUploadResponse, _impl_.column_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvFileList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::csvservice::CsvFileList, _impl_.filenames_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::csvservice::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::csvservice::CsvUploadRequest)},
        {10, -1, -1, sizeof(::csvservice::CsvUploadResponse)},
        {22, -1, -1, sizeof(::csvservice::CsvFileList)},
        {31, -1, -1, sizeof(::csvservice::Empty)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::csvservice::_CsvUploadRequest_default_instance_._instance,
    &::csvservice::_CsvUploadResponse_default_instance_._instance,
    &::csvservice::_CsvFileList_default_instance_._instance,
    &::csvservice::_Empty_default_instance_._instance,
};
const char descriptor_table_protodef_csv_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021csv_service.proto\022\ncsvservice\"6\n\020CsvUp"
    "loadRequest\022\020\n\010filename\030\001 \001(\t\022\020\n\010csv_dat"
    "a\030\002 \001(\014\"^\n\021CsvUploadResponse\022\017\n\007success\030"
    "\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\021\n\trow_count\030\003 \001("
    "\005\022\024\n\014column_count\030\004 \001(\005\" \n\013CsvFileList\022\021"
    "\n\tfilenames\030\001 \003(\t\"\007\n\005Empty2\225\001\n\nCsvServic"
    "e\022H\n\tUploadCsv\022\034.csvservice.CsvUploadReq"
    "uest\032\035.csvservice.CsvUploadResponse\022=\n\017L"
    "istLoadedFiles\022\021.csvservice.Empty\032\027.csvs"
    "ervice.CsvFileListb\006proto3"
};
static ::absl::once_flag descriptor_table_csv_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_csv_5fservice_2eproto = {
    false,
    false,
    386,
    descriptor_table_protodef_csv_5fservice_2eproto,
    "csv_service.proto",
    &descriptor_table_csv_5fservice_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_csv_5fservice_2eproto::offsets,
    file_level_enum_descriptors_csv_5fservice_2eproto,
    file_level_service_descriptors_csv_5fservice_2eproto,
};
namespace csvservice {
// ===================================================================

class CsvUploadRequest::_Internal {
 public:
};

CsvUploadRequest::CsvUploadRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csvservice.CsvUploadRequest)
}
inline PROTOBUF_NDEBUG_INLINE CsvUploadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::csvservice::CsvUploadRequest& from_msg)
      : filename_(arena, from.filename_),
        csv_data_(arena, from.csv_data_),
        _cached_size_{0} {}

CsvUploadRequest::CsvUploadRequest(
    ::google::protobuf::Arena* arena,
    const CsvUploadRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CsvUploadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:csvservice.CsvUploadRequest)
}
inline PROTOBUF_NDEBUG_INLINE CsvUploadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filename_(arena),
        csv_data_(arena),
        _cached_size_{0} {}

inline void CsvUploadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CsvUploadRequest::~CsvUploadRequest() {
  // @@protoc_insertion_point(destructor:csvservice.CsvUploadRequest)
  SharedDtor(*this);
}
inline void CsvUploadRequest::SharedDtor(MessageLite& self) {
  CsvUploadRequest& this_ = static_cast<CsvUploadRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.filename_.Destroy();
  this_._impl_.csv_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CsvUploadRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CsvUploadRequest(arena);
}
constexpr auto CsvUploadRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CsvUploadRequest),
                                            alignof(CsvUploadRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CsvUploadRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CsvUploadRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CsvUploadRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CsvUploadRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CsvUploadRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CsvUploadRequest>(), &CsvUploadRequest::ByteSizeLong,
            &CsvUploadRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CsvUploadRequest, _impl_._cached_size_),
        false,
    },
    &CsvUploadRequest::kDescriptorMethods,
    &descriptor_table_csv_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CsvUploadRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> CsvUploadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::csvservice::CsvUploadRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes csv_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CsvUploadRequest, _impl_.csv_data_)}},
    // string filename = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CsvUploadRequest, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(CsvUploadRequest, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes csv_data = 2;
    {PROTOBUF_FIELD_OFFSET(CsvUploadRequest, _impl_.csv_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\10\0\0\0\0\0\0"
    "csvservice.CsvUploadRequest"
    "filename"
  }},
};

PROTOBUF_NOINLINE void CsvUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csvservice.CsvUploadRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filename_.ClearToEmpty();
  _impl_.csv_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CsvUploadRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CsvUploadRequest& this_ = static_cast<const CsvUploadRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CsvUploadRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CsvUploadRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:csvservice.CsvUploadRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string filename = 1;
          if (!this_._internal_filename().empty()) {
            const std::string& _s = this_._internal_filename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csvservice.CsvUploadRequest.filename");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes csv_data = 2;
          if (!this_._internal_csv_data().empty()) {
            const std::string& _s = this_._internal_csv_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:csvservice.CsvUploadRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CsvUploadRequest::ByteSizeLong(const MessageLite& base) {
          const CsvUploadRequest& this_ = static_cast<const CsvUploadRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CsvUploadRequest::ByteSizeLong() const {
          const CsvUploadRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:csvservice.CsvUploadRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string filename = 1;
            if (!this_._internal_filename().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filename());
            }
            // bytes csv_data = 2;
            if (!this_._internal_csv_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_csv_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CsvUploadRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CsvUploadRequest*>(&to_msg);
  auto& from = static_cast<const CsvUploadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csvservice.CsvUploadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (!from._internal_csv_data().empty()) {
    _this->_internal_set_csv_data(from._internal_csv_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CsvUploadRequest::CopyFrom(const CsvUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csvservice.CsvUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CsvUploadRequest::InternalSwap(CsvUploadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.csv_data_, &other->_impl_.csv_data_, arena);
}

::google::protobuf::Metadata CsvUploadRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CsvUploadResponse::_Internal {
 public:
};

CsvUploadResponse::CsvUploadResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csvservice.CsvUploadResponse)
}
inline PROTOBUF_NDEBUG_INLINE CsvUploadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::csvservice::CsvUploadResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

CsvUploadResponse::CsvUploadResponse(
    ::google::protobuf::Arena* arena,
    const CsvUploadResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CsvUploadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, column_count_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::column_count_));

  // @@protoc_insertion_point(copy_constructor:csvservice.CsvUploadResponse)
}
inline PROTOBUF_NDEBUG_INLINE CsvUploadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void CsvUploadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, column_count_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::column_count_));
}
CsvUploadResponse::~CsvUploadResponse() {
  // @@protoc_insertion_point(destructor:csvservice.CsvUploadResponse)
  SharedDtor(*this);
}
inline void CsvUploadResponse::SharedDtor(MessageLite& self) {
  CsvUploadResponse& this_ = static_cast<CsvUploadResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CsvUploadResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CsvUploadResponse(arena);
}
constexpr auto CsvUploadResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CsvUploadResponse),
                                            alignof(CsvUploadResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CsvUploadResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CsvUploadResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CsvUploadResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CsvUploadResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CsvUploadResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CsvUploadResponse>(), &CsvUploadResponse::ByteSizeLong,
            &CsvUploadResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_._cached_size_),
        false,
    },
    &CsvUploadResponse::kDescriptorMethods,
    &descriptor_table_csv_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CsvUploadResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2> CsvUploadResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::csvservice::CsvUploadResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 column_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CsvUploadResponse, _impl_.column_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.column_count_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CsvUploadResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.message_)}},
    // int32 row_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CsvUploadResponse, _impl_.row_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.row_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 row_count = 3;
    {PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.row_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 column_count = 4;
    {PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.column_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\34\0\7\0\0\0\0\0"
    "csvservice.CsvUploadResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void CsvUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csvservice.CsvUploadResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.column_count_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.column_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CsvUploadResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CsvUploadResponse& this_ = static_cast<const CsvUploadResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CsvUploadResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CsvUploadResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:csvservice.CsvUploadResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csvservice.CsvUploadResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 row_count = 3;
          if (this_._internal_row_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_row_count(), target);
          }

          // int32 column_count = 4;
          if (this_._internal_column_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_column_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:csvservice.CsvUploadResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CsvUploadResponse::ByteSizeLong(const MessageLite& base) {
          const CsvUploadResponse& this_ = static_cast<const CsvUploadResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CsvUploadResponse::ByteSizeLong() const {
          const CsvUploadResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:csvservice.CsvUploadResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
            // int32 row_count = 3;
            if (this_._internal_row_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_row_count());
            }
            // int32 column_count = 4;
            if (this_._internal_column_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_column_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CsvUploadResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CsvUploadResponse*>(&to_msg);
  auto& from = static_cast<const CsvUploadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csvservice.CsvUploadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (from._internal_row_count() != 0) {
    _this->_impl_.row_count_ = from._impl_.row_count_;
  }
  if (from._internal_column_count() != 0) {
    _this->_impl_.column_count_ = from._impl_.column_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CsvUploadResponse::CopyFrom(const CsvUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csvservice.CsvUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CsvUploadResponse::InternalSwap(CsvUploadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.column_count_)
      + sizeof(CsvUploadResponse::_impl_.column_count_)
      - PROTOBUF_FIELD_OFFSET(CsvUploadResponse, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata CsvUploadResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CsvFileList::_Internal {
 public:
};

CsvFileList::CsvFileList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csvservice.CsvFileList)
}
inline PROTOBUF_NDEBUG_INLINE CsvFileList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::csvservice::CsvFileList& from_msg)
      : filenames_{visibility, arena, from.filenames_},
        _cached_size_{0} {}

CsvFileList::CsvFileList(
    ::google::protobuf::Arena* arena,
    const CsvFileList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CsvFileList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:csvservice.CsvFileList)
}
inline PROTOBUF_NDEBUG_INLINE CsvFileList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filenames_{visibility, arena},
        _cached_size_{0} {}

inline void CsvFileList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CsvFileList::~CsvFileList() {
  // @@protoc_insertion_point(destructor:csvservice.CsvFileList)
  SharedDtor(*this);
}
inline void CsvFileList::SharedDtor(MessageLite& self) {
  CsvFileList& this_ = static_cast<CsvFileList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CsvFileList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CsvFileList(arena);
}
constexpr auto CsvFileList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CsvFileList, _impl_.filenames_) +
          decltype(CsvFileList::_impl_.filenames_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CsvFileList), alignof(CsvFileList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CsvFileList::PlacementNew_,
                                 sizeof(CsvFileList),
                                 alignof(CsvFileList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CsvFileList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CsvFileList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CsvFileList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CsvFileList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CsvFileList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CsvFileList>(), &CsvFileList::ByteSizeLong,
            &CsvFileList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CsvFileList, _impl_._cached_size_),
        false,
    },
    &CsvFileList::kDescriptorMethods,
    &descriptor_table_csv_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CsvFileList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> CsvFileList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::csvservice::CsvFileList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string filenames = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CsvFileList, _impl_.filenames_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string filenames = 1;
    {PROTOBUF_FIELD_OFFSET(CsvFileList, _impl_.filenames_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\26\11\0\0\0\0\0\0"
    "csvservice.CsvFileList"
    "filenames"
  }},
};

PROTOBUF_NOINLINE void CsvFileList::Clear() {
// @@protoc_insertion_point(message_clear_start:csvservice.CsvFileList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filenames_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CsvFileList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CsvFileList& this_ = static_cast<const CsvFileList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CsvFileList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CsvFileList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:csvservice.CsvFileList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string filenames = 1;
          for (int i = 0, n = this_._internal_filenames_size(); i < n; ++i) {
            const auto& s = this_._internal_filenames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csvservice.CsvFileList.filenames");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:csvservice.CsvFileList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CsvFileList::ByteSizeLong(const MessageLite& base) {
          const CsvFileList& this_ = static_cast<const CsvFileList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CsvFileList::ByteSizeLong() const {
          const CsvFileList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:csvservice.CsvFileList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string filenames = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_filenames().size());
              for (int i = 0, n = this_._internal_filenames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_filenames().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CsvFileList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CsvFileList*>(&to_msg);
  auto& from = static_cast<const CsvFileList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csvservice.CsvFileList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_filenames()->MergeFrom(from._internal_filenames());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CsvFileList::CopyFrom(const CsvFileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csvservice.CsvFileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CsvFileList::InternalSwap(CsvFileList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.filenames_.InternalSwap(&other->_impl_.filenames_);
}

::google::protobuf::Metadata CsvFileList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:csvservice.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csvservice.Empty)
}

inline void* Empty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Empty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Empty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Empty::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Empty::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
            &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
        false,
    },
    &Empty::kDescriptorMethods,
    &descriptor_table_csv_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::csvservice::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace csvservice
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_csv_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
